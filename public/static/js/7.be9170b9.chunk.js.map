{"version":3,"sources":["components/Layout/ContentWrapper.js","components/Hooks/HTTPHooks.js","components/Appointment/AppointmentFormValidation.js","components/Appointment/AppointmentFormValidationRules.js","components/Appointment/AppointmentForm.js"],"names":["ContentWrapper","props","className","unwrap","children","defaultProps","useHttpClient","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","AppointmentFormValidation","initialFormValues","AppointmentFormValidationRules","React","useState","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","Object","keys","length","process","JSON","stringify","nm","em","mobno","carbd","dat","tm","history","createAppointment","handleSubmit","event","preventDefault","handleChange","target","name","value","handleDateChange","fieldname","moment","handleBlur","withNamespaces","dropdownOpen","setDropdownOpen","changeLanguage","lng","i18n","INITIAL_FIELDS_VALUES","i18nKey","isOpen","toggle","onClick","onSubmit","row","id","type","onChange","onBlur","defaultValue","dateFormat","timeFormat","closeOnSelect","isValidDate","yesterday","Datetime","subtract","threeweeks","add","isAfter","isBefore","day","inputProps","disabled"],"mappings":"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","file":"static/js/7.be9170b9.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Wrapper element for template content\r\n */\r\nconst ContentWrapper = props =>(\r\n    <div className=\"content-wrapper\">\r\n        {props.unwrap ?\r\n            (<div className=\"unwrap\">{props.children}</div>)\r\n            :\r\n            (props.children)\r\n        }\r\n    </div>\r\n)\r\n\r\nContentWrapper.propTypes = {\r\n    /** add element with 'unwrap' class to expand content area */\r\n    unwrap: PropTypes.bool\r\n}\r\nContentWrapper.defaultProps = {\r\n    unwrap: false\r\n}\r\n\r\nexport default ContentWrapper;\r\n","import { useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n    const httpAbortCtrl = new AbortController();\r\n    activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method,\r\n        body,\r\n        headers,\r\n        signal: httpAbortCtrl.signal\r\n      });\r\n\r\n      const responseData = await response.json();\r\n\r\n      activeHttpRequests.current = activeHttpRequests.current.filter(reqCtrl => reqCtrl !== httpAbortCtrl);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(responseData.message);\r\n      }\r\n\r\n      return responseData;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { sendRequest };\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport moment from 'moment';\r\n\r\nimport { useHttpClient } from '../Hooks/HTTPHooks';\r\n\r\nconst AppointmentFormValidation = (initialFormValues, AppointmentFormValidationRules, props) => {\r\n  const [values, setValues] = React.useState(initialFormValues);\r\n  const [errors, setErrors] = React.useState({});\r\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\r\n  const { sendRequest } = useHttpClient();\r\n\r\n  useEffect(() => {\r\n    if (isSubmitting) {\r\n      const noErrors = Object.keys(errors).length === 0;\r\n      if (noErrors) {\r\n        const createAppointment = async () => {\r\n          try {\r\n            await sendRequest(\r\n              process.env.REACT_APP_BACKEND_URL + '/appointment',\r\n              'POST',\r\n              JSON.stringify({\r\n                nm: values.nm,\r\n                em: values.em,\r\n                mobno: values.mobno,\r\n                carbd: values.carbd,\r\n                dat: values.dat,\r\n                tm: values.tm,\r\n              }),\r\n              {\r\n                'Content-Type': 'application/json',\r\n              }\r\n            );\r\n            setIsSubmitting(false);\r\n            props.history.push('/myappointment');\r\n          } catch (err) {}\r\n        };\r\n        createAppointment();\r\n      } else {\r\n        setIsSubmitting(false);\r\n      }\r\n    }\r\n  }, [isSubmitting]); // eslint-disable-line\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value, // use the bracket surrounding the event.target.name to dynamically change the property.\r\n    });\r\n  };\r\n\r\n  const handleDateChange = (fieldname, value) => {\r\n    if (value === '') {\r\n      setValues({\r\n        ...values,\r\n        [fieldname]: moment(values[fieldname]),\r\n      });\r\n    } else {\r\n      setValues({\r\n        ...values,\r\n        [fieldname]: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    setErrors(AppointmentFormValidationRules(values));\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setErrors(AppointmentFormValidationRules(values));\r\n    setIsSubmitting(true);\r\n    // Move to call useEffect\r\n    // If there is error, no submit.\r\n  };\r\n\r\n  return { handleSubmit, handleChange, handleDateChange, handleBlur, values, errors, isSubmitting };\r\n};\r\n\r\nexport default AppointmentFormValidation;\r\n","export default function AppointmentFormValidationRules(values) {\r\n  let errors = {};\r\n\r\n  if (!values.nm) {\r\n    errors.nm = 'Please enter Name.';\r\n  }\r\n\r\n  if (!values.mobno) {\r\n    errors.mobno = 'Please select Mobile No.';\r\n  }\r\n\r\n  if (!values.dat) {\r\n    errors.dat = 'Please select Date.';\r\n  }\r\n\r\n  if (!values.tm) {\r\n    errors.tm = 'Please select Time.';\r\n  }\r\n  return errors;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { withNamespaces, Trans } from 'react-i18next';\r\nimport ContentWrapper from '../Layout/ContentWrapper';\r\nimport Datetime from 'react-datetime';\r\nimport 'react-datetime/css/react-datetime.css';\r\nimport moment from 'moment';\r\nimport { Card, CardBody, FormGroup, Input, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\n\r\nimport AppointmentFormValidation from './AppointmentFormValidation';\r\nimport AppointmentFormValidationRules from './AppointmentFormValidationRules';\r\n\r\nconst AppointmentForm = (props) => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const changeLanguage = (lng) => {\r\n    props.i18n.changeLanguage(lng);\r\n  };\r\n\r\n  const toggle = () => {\r\n    setDropdownOpen(!dropdownOpen);\r\n  };\r\n\r\n  // Initial Fields Value\r\n  const INITIAL_FIELDS_VALUES = {\r\n    nm: '',\r\n    em: '',\r\n    mobno: '',\r\n    carbd: '',\r\n    dat: moment(),\r\n    tm: '9:00 AM',\r\n  };\r\n\r\n  // Selectable date\r\n  const selectableDate = (current) => {\r\n    const yesterday = Datetime.moment().subtract(1, 'day');\r\n    const threeweeks = Datetime.moment().add(21, 'day');\r\n    return current.isAfter(yesterday) && current.isBefore(threeweeks) && current.day() !== 0;\r\n  };\r\n\r\n  const { handleSubmit, handleChange, handleDateChange, handleBlur, values, errors, isSubmitting } = AppointmentFormValidation(\r\n    INITIAL_FIELDS_VALUES,\r\n    AppointmentFormValidationRules,\r\n    props\r\n  );\r\n\r\n  return (\r\n    <ContentWrapper>\r\n      <div className=\"content-heading\">\r\n        <div>\r\n          <Trans i18nKey=\"makeappointment.TITLE\"></Trans>\r\n        </div>\r\n        {/* START Language list */}\r\n        <div className=\"ml-auto\">\r\n          <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n            <DropdownToggle>English</DropdownToggle>\r\n            <DropdownMenu className=\"dropdown-menu-right-forced animated fadeInUpShort\">\r\n              <DropdownItem onClick={() => changeLanguage('en')}>English</DropdownItem>\r\n              <DropdownItem onClick={() => changeLanguage('ch')}>Chinese</DropdownItem>\r\n            </DropdownMenu>\r\n          </Dropdown>\r\n        </div>\r\n        {/* END Language list */}\r\n      </div>\r\n\r\n      <Card className=\"card-default\">\r\n        <CardBody>\r\n          <form className=\"form-horizontal\" onSubmit={handleSubmit}>\r\n            <FormGroup row>\r\n              <label className=\"col-xl-2 col-form-label\">\r\n                <Trans i18nKey=\"form.NAME\"></Trans>\r\n                <span className=\"text-danger\"> *</span>\r\n              </label>\r\n              <div className=\"col-xl-10\">\r\n                <Input\r\n                  id=\"nm\"\r\n                  name=\"nm\"\r\n                  type=\"text\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.nm}\r\n                  className={errors.nm ? 'is-invalid' : ''}\r\n                />\r\n                {errors.nm && <p className=\"text-danger\">{errors.nm}</p>}\r\n              </div>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <label className=\"col-xl-2 col-form-label\">\r\n                <Trans i18nKey=\"form.EMAIL\"></Trans>\r\n              </label>\r\n              <div className=\"col-xl-10\">\r\n                <Input\r\n                  id=\"em\"\r\n                  name=\"em\"\r\n                  type=\"text\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.em}\r\n                  className={errors.em ? 'is-invalid' : ''}\r\n                />\r\n                {errors.em && <p className=\"text-danger\">{errors.em}</p>}\r\n              </div>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <label className=\"col-xl-2 col-form-label\">\r\n                <Trans i18nKey=\"form.MOBILE\"></Trans> <span className=\"text-danger\"> *</span>\r\n              </label>\r\n              <div className=\"col-xl-10\">\r\n                <Input\r\n                  id=\"mobno\"\r\n                  name=\"mobno\"\r\n                  type=\"text\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.mobno}\r\n                  className={errors.mobno ? 'is-invalid' : ''}\r\n                />\r\n                {errors.mobno && <p className=\"text-danger\">{errors.mobno}</p>}\r\n              </div>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <label className=\"col-xl-2 col-form-label\">\r\n                <Trans i18nKey=\"form.CARBRAND\"></Trans>\r\n              </label>\r\n              <div className=\"col-xl-10\">\r\n                <select\r\n                  id=\"carbd\"\r\n                  name=\"carbd\"\r\n                  type=\"text\"\r\n                  onChange={handleChange}\r\n                  defaultValue={values.carbd}\r\n                  className=\"custom-select custom-select-sm\"\r\n                >\r\n                  <option value=\"\">Please select</option>\r\n                  <option value=\"Proton\">Proton</option>\r\n                  <option value=\"Honda\">Honda</option>\r\n                  <option value=\"Toyota\">Toyota</option>\r\n                  <option value=\"Nissan\">Nissan</option>\r\n                </select>\r\n              </div>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <label className=\"col-xl-2 col-form-label\">\r\n                <Trans i18nKey=\"form.DATE\"></Trans>\r\n              </label>\r\n              <div className=\"col-xl-10\">\r\n                <Datetime\r\n                  dateFormat=\"DD-MMM-YYYY\"\r\n                  timeFormat={false}\r\n                  closeOnSelect={true}\r\n                  onChange={(value) => handleDateChange('dat', value)}\r\n                  value={values.dat}\r\n                  isValidDate={selectableDate}\r\n                  inputProps={{ id: 'dat', name: 'dat', className: 'form-control' }}\r\n                />\r\n              </div>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <label className=\"col-xl-2 col-form-label\">\r\n                <Trans i18nKey=\"form.TIME\"></Trans>\r\n              </label>\r\n              <div className=\"col-xl-10\">\r\n                <select\r\n                  id=\"tm\"\r\n                  name=\"tm\"\r\n                  type=\"text\"\r\n                  onChange={handleChange}\r\n                  defaultValue={values.tm}\r\n                  className=\"custom-select custom-select-sm\"\r\n                >\r\n                  <option value=\"9:00 AM\">9:00 AM</option>\r\n                  <option value=\"9:30 AM\">9:30 AM</option>\r\n                  <option value=\"10:00 AM\">10:00 AM</option>\r\n                  <option value=\"10:30 AM\">10:30 AM</option>\r\n                  <option value=\"11:00 AM\">11:00 AM</option>\r\n                  <option value=\"11:30 AM\">11:30 AM</option>\r\n                  <option value=\"12:00 PM\">12:00 PM</option>\r\n                  <option value=\"12:30 PM\">12:30 PM</option>\r\n                  <option value=\"1:00 PM\">1:00 PM</option>\r\n                  <option value=\"1:30 PM\">1:30 PM</option>\r\n                  <option value=\"2:00 PM\">2:00 PM</option>\r\n                  <option value=\"2:30 PM\">2:30 PM</option>\r\n                  <option value=\"3:00 PM\">3:00 PM</option>\r\n                  <option value=\"3:30 PM\">3:30 PM</option>\r\n                  <option value=\"4:00 PM\">4:00 PM</option>\r\n                  <option value=\"4:30 PM\">4:30 PM</option>\r\n                  <option value=\"5:00 PM\">5:00 PM</option>\r\n                  <option value=\"5:30 PM\">5:30 PM</option>\r\n                </select>\r\n              </div>\r\n            </FormGroup>\r\n            <div className=\"text-right\">\r\n              <button className=\"btn btn-sm btn-secondary\" type=\"submit\" disabled={isSubmitting}>\r\n                Book My Appointment\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </ContentWrapper>\r\n  );\r\n};\r\n\r\nexport default withNamespaces('translations')(AppointmentForm);\r\n"],"sourceRoot":""}