{"version":3,"sources":["components/Hooks/HTTPHooks.js","components/Layout/ContentWrapper.js","components/Common/Datatable.js","components/ToDoModal/TodoModalFormValidation.js","components/ToDoModal/ToDoModalFormValidationRules.js","components/ToDoModal/ToDoModalForm.js","components/Common/Swal.js","components/Common/DelBtn.js","components/ToDoTable/ToDoTable.js","components/LastestTable/LastestTable.js","components/ReviewStatistic/ReviewStatistic.js","components/ReviewChart/Flot.js","components/ReviewChart/ReviewChart.js","components/Main/Main.js"],"names":["useHttpClient","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","ContentWrapper","props","className","unwrap","children","defaultProps","window","JSZip","require","Datatable","setRef","node","tableElement","dtInstance","$","this","dataTable","options","destroy","React","cloneElement","Children","only","ref","Component","TodoModalFormValidation","initialFormValues","FormValidationRules","useState","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","showTodoModal","docID","process","responceData","dueAt","moment","format","fetchFieldValues","Object","keys","length","toggleTodoModal","Accept","JSON","stringify","status","priority","description","responce","addTableData","id","_id","createDoc","updateTableData","updateDoc","handleSubmit","event","preventDefault","handleChange","target","name","value","handleCustomChange","type","fieldname","handleBlur","TodoModalFormValidationRules","TodoModalForm","INITIAL_FIELDS_VALUES","isOpen","toggle","e","onSubmit","row","onChange","onBlur","key","prority","placeholder","dateFormat","timeFormat","closeOnSelect","inputProps","color","onClick","disabled","Swal","callback","rest","swal","then","p","propType","PropTypes","object","isRequired","func","DelBtn","handleDeleteConfirm","isConfirm","console","log","delurl","onDeleteData","docid","title","text","icon","buttons","cancel","confirm","visible","closeModal","TodoTable","tableData","setTableData","showToDoModal","setShowTodoModal","setDocID","fetchData","p_id","prevState","deleteTableData","prevTableData","data","newTableData","concat","elementsIndex","findIndex","element","fluid","undefined","s","pageLength","paging","ordering","info","responsive","bAutoWidth","data-priority","map","ToDo","alt","LatestTable","lengthChange","searching","ReviewStatistics","statistic","setStatistic","totalCompleted","totalTask","FlotChart","flotElement","plot","dreawChart","nextProps","deepEqual","style","height","width","ReviewChart","chartData","setChartData","chartOption","series","pie","show","innerRadius","label","radius","formatter","Math","round","percent","background","opacity","Flot","Todo","activeTab","setActiveTab","toggleTab","tab","role","tabs","justified","href","tabId","md","ReviewStatistic"],"mappings":"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","file":"static/js/5.66af6ac2.chunk.js","sourcesContent":["import { useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n    const httpAbortCtrl = new AbortController();\r\n    activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method,\r\n        body,\r\n        headers,\r\n        signal: httpAbortCtrl.signal\r\n      });\r\n\r\n      const responseData = await response.json();\r\n\r\n      activeHttpRequests.current = activeHttpRequests.current.filter(reqCtrl => reqCtrl !== httpAbortCtrl);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(responseData.message);\r\n      }\r\n\r\n      return responseData;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { sendRequest };\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Wrapper element for template content\r\n */\r\nconst ContentWrapper = props =>(\r\n    <div className=\"content-wrapper\">\r\n        {props.unwrap ?\r\n            (<div className=\"unwrap\">{props.children}</div>)\r\n            :\r\n            (props.children)\r\n        }\r\n    </div>\r\n)\r\n\r\nContentWrapper.propTypes = {\r\n    /** add element with 'unwrap' class to expand content area */\r\n    unwrap: PropTypes.bool\r\n}\r\nContentWrapper.defaultProps = {\r\n    unwrap: false\r\n}\r\n\r\nexport default ContentWrapper;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport $ from 'jquery';\r\n\r\n// Libraries for buttons\r\nimport * as JSZip from 'jszip';\r\nwindow.JSZip = JSZip;\r\nrequire('pdfmake/build/pdfmake.js');\r\nrequire('pdfmake/build/vfs_fonts.js');\r\n// Datatables\r\nrequire('datatables.net-bs');\r\nrequire('datatables.net-bs4/js/dataTables.bootstrap4.js');\r\nrequire('datatables.net-bs4/css/dataTables.bootstrap4.css');\r\nrequire('datatables.net-buttons');\r\nrequire('datatables.net-buttons-bs');\r\nrequire('datatables.net-responsive');\r\nrequire('datatables.net-responsive-bs');\r\nrequire('datatables.net-responsive-bs/css/responsive.bootstrap.css');\r\nrequire('datatables.net-buttons/js/buttons.colVis.js'); // Column visibility\r\nrequire('datatables.net-buttons/js/buttons.html5.js'); // HTML 5 file export\r\nrequire('datatables.net-buttons/js/buttons.flash.js'); // Flash file export\r\nrequire('datatables.net-buttons/js/buttons.print.js'); // Print view button\r\nrequire('datatables.net-keytable');\r\nrequire('datatables.net-keytable-bs/css/keyTable.bootstrap.css');\r\n\r\n/**\r\n * Wrapper component for dataTable plugin\r\n * Only DOM child elements, componets are not supported (e.g. <Table>)\r\n */\r\nexport default class Datatable extends Component {\r\n  static propTypes = {\r\n    /** datatables options object */\r\n    options: PropTypes.object,\r\n    /** only one children allowed */\r\n    children: PropTypes.element.isRequired,\r\n    /** callback that receives the datatable instance as param */\r\n    dtInstance: PropTypes.func,\r\n  };\r\n\r\n  static defaultProps = {\r\n    options: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    const dtInstance = $(this.tableElement).dataTable(this.props.options);\r\n\r\n    if (this.props.dtInstance) this.props.dtInstance(dtInstance);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    $(this.tableElement).dataTable({ destroy: true });\r\n  }\r\n\r\n  setRef = (node) => (this.tableElement = node);\r\n\r\n  render() {\r\n    return React.cloneElement(React.Children.only(this.props.children), {\r\n      ref: this.setRef,\r\n    });\r\n  }\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\n\r\nimport { useHttpClient } from '../Hooks/HTTPHooks';\r\n\r\nconst TodoModalFormValidation = (initialFormValues, FormValidationRules, props) => {\r\n  const [values, setValues] = useState({ ...initialFormValues });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const { sendRequest } = useHttpClient();\r\n\r\n  useEffect(() => {\r\n    setValues({\r\n      ...initialFormValues,\r\n    });\r\n  }, [props.showTodoModal]); // eslint-disable-line\r\n\r\n  useEffect(() => {\r\n    if (props.docID === '') {\r\n      setValues({\r\n        ...initialFormValues,\r\n      });\r\n    } else {\r\n      const fetchFieldValues = async () => {\r\n        try {\r\n          const responceData = await sendRequest(process.env.REACT_APP_BACKEND_URL + '/todolist/getbyid?id=' + props.docID);\r\n          setValues({\r\n            ...responceData,\r\n            dueAt: moment(responceData.dueAt).format('DD-MMM-YYYY'),\r\n          });\r\n        } catch (err) {}\r\n      };\r\n      fetchFieldValues();\r\n    }\r\n  }, [props.docID]); // eslint-disable-line\r\n\r\n  useEffect(() => {\r\n    if (isSubmitting) {\r\n      const noErrors = Object.keys(errors).length === 0;\r\n      if (noErrors) {\r\n        props.toggleTodoModal('');\r\n        if (props.docID === '') {\r\n          const createDoc = async () => {\r\n            try {\r\n              const responce = await fetch(process.env.REACT_APP_BACKEND_URL + '/todolist', {\r\n                method: 'POST',\r\n                headers: {\r\n                  Accept: 'application/json',\r\n                  'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                  status: values.status,\r\n                  priority: values.priority,\r\n                  description: values.description,\r\n                  dueAt: moment(values.dueAt).format('DD-MMM-YYYY'),\r\n                }),\r\n              });\r\n              const responseData = await responce.json();\r\n              props.addTableData({\r\n                ...values,\r\n                id: responseData._id,\r\n              });\r\n              setIsSubmitting(false);\r\n            } catch (err) {}\r\n          };\r\n          createDoc();\r\n        } else {\r\n          const updateDoc = async () => {\r\n            try {\r\n              await sendRequest(\r\n                process.env.REACT_APP_BACKEND_URL + '/todolist?id=' + props.docID,\r\n                'PATCH',\r\n                JSON.stringify({\r\n                  status: values.status,\r\n                  priority: values.priority,\r\n                  description: values.description,\r\n                  dueAt: moment(values.dueAt).format('DD-MMM-YYYY'),\r\n                }),\r\n                { 'Content-Type': 'application/json' }\r\n              );\r\n              props.updateTableData({\r\n                ...values,\r\n                id: props.docID,\r\n              });\r\n              setIsSubmitting(false);\r\n            } catch (err) {}\r\n          };\r\n          updateDoc();\r\n        }\r\n      } else {\r\n        setIsSubmitting(false);\r\n      }\r\n    }\r\n  }, [isSubmitting]); // eslint-disable-line\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value, // use the bracket surrounding the event.target.name to dynamically change the property.\r\n    });\r\n  };\r\n\r\n  const handleCustomChange = (type, fieldname, value) => {\r\n    if (type === 'date_m') {\r\n      if (value === '') {\r\n        setValues({\r\n          ...values,\r\n          [fieldname]: moment(values[fieldname]),\r\n        });\r\n      } else {\r\n        setValues({\r\n          ...values,\r\n          [fieldname]: value,\r\n        });\r\n      }\r\n    } else {\r\n      setValues({\r\n        ...values,\r\n        [fieldname]: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    setErrors(FormValidationRules(values));\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setErrors(FormValidationRules(values));\r\n    setIsSubmitting(true);\r\n    // Move to call useEffect\r\n    // If there is error, no submit.\r\n  };\r\n\r\n  return {\r\n    handleSubmit,\r\n    handleChange,\r\n    handleCustomChange,\r\n    handleBlur,\r\n    values,\r\n    errors,\r\n    isSubmitting,\r\n  };\r\n};\r\n\r\nexport default TodoModalFormValidation;\r\n","/**\r\n * This is where you configure the validation rules\r\n */\r\n\r\nexport default function TodoModalFormValidationRules(values) {\r\n  let errors = {};\r\n\r\n  if (!values.status) {\r\n    errors.status = 'Please select status.';\r\n  }\r\n\r\n  if (!values.priority) {\r\n    errors.priority = 'Please select priority.';\r\n  }\r\n\r\n  if (!values.description) {\r\n    errors.description = 'Please enter description.';\r\n  }\r\n\r\n  return errors;\r\n}\r\n","import React from 'react';\r\nimport Datetime from 'react-datetime';\r\nimport 'react-datetime/css/react-datetime.css';\r\nimport moment from 'moment';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Input } from 'reactstrap';\r\n\r\nimport TodoModalFormValidation from './TodoModalFormValidation';\r\nimport TodoModalFormValidationRules from './ToDoModalFormValidationRules';\r\n\r\nconst TodoModalForm = (props) => {\r\n  const INITIAL_FIELDS_VALUES = {\r\n    id: '',\r\n    status: '',\r\n    priority: '',\r\n    description: '',\r\n    dueAt: moment(),\r\n  };\r\n  const { handleSubmit, handleChange, handleCustomChange, handleBlur, values, errors, isSubmitting } = TodoModalFormValidation(INITIAL_FIELDS_VALUES, TodoModalFormValidationRules, props);\r\n\r\n  return (\r\n    <>\r\n      <Modal isOpen={props.showTodoModal} toggle={(e) => props.toggleTodoModal('')}>\r\n        <ModalHeader toggle={(e) => props.toggleTodoModal('')}>{props.docID === '' ? 'Add New Item' : 'Edit Item'}</ModalHeader>\r\n        <ModalBody>\r\n          <form className='form-horizontal' onSubmit={handleSubmit}>\r\n            <FormGroup row>\r\n              <div className='col-xl-12'>\r\n                <select id='status' name='status' type='text' onChange={handleChange} onBlur={handleBlur} value={values.status} className={errors.status ? 'custom-select custom-select-sm is-invalid' : 'custom-select custom-select-sm'}>\r\n                  <option key='0' value=''>\r\n                    Select Status\r\n                  </option>\r\n                  <option key='1' value='Incomplete'>\r\n                    Incomplete\r\n                  </option>\r\n                  <option key='2' value='Completed'>\r\n                    Completed\r\n                  </option>\r\n                </select>\r\n                {errors.status && <p className='text-danger'>{errors.status}</p>}\r\n              </div>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <div className='col-xl-12'>\r\n                <select id='priority' name='priority' type='text' onChange={handleChange} onBlur={handleBlur} value={values.priority} className={errors.priority ? 'custom-select custom-select-sm is-invalid' : 'custom-select custom-select-sm'}>\r\n                  <option key='0' value=''>\r\n                    Select Priority\r\n                  </option>\r\n                  <option key='1' value='Low Priority'>\r\n                    Low Priority\r\n                  </option>\r\n                  <option key='2' value='Medium Priority'>\r\n                    Medium Priority\r\n                  </option>\r\n                  <option key='3' value='High Priority '>\r\n                    High Priority\r\n                  </option>\r\n                </select>\r\n                {errors.prority && <p className='text-danger'>{errors.prority}</p>}\r\n              </div>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <div className='col-xl-12'>\r\n                <Input id='description' name='description' type='text' value={values.description} onChange={handleChange} placeholder='Description' />\r\n                {errors.description && <p className='text-danger'>{errors.description}</p>}\r\n              </div>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <div className='col-xl-12'>\r\n                <Datetime dateFormat='DD-MMM-YYYY' timeFormat={false} closeOnSelect={true} onChange={(value, event) => handleCustomChange('date_m', 'dueAt', value)} value={values.dueAt} inputProps={{ id: 'dueAt', name: 'dueAt', className: 'form-control' }} />\r\n              </div>\r\n            </FormGroup>\r\n          </form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color='primary' onClick={handleSubmit} disabled={isSubmitting}>\r\n            {props.docID === '' ? 'Add New' : 'Save'}\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoModalForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// Sweet Alert\r\nimport swal from 'sweetalert';\r\n\r\n/**\r\n * Wrapper component for sweetalert plugin\r\n */\r\nconst Swal = props => {\r\n  const handleClick = e => {\r\n    e.preventDefault();\r\n    // pass swal reference so is possible to chain popups\r\n    swal(props.options).then(p => props.callback(p, swal));\r\n  };\r\n\r\n  const { callback, ...rest } = props;\r\n  return (\r\n    <div {...rest} onClick={handleClick}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nSwal.propType = {\r\n  /** swal options object */\r\n  options: PropTypes.object.isRequired,\r\n  /** callback function for swal response */\r\n  callback: PropTypes.func\r\n};\r\n\r\nSwal.defaultProps = {\r\n  callback: () => {}\r\n};\r\n\r\nexport default Swal;\r\n","import React from 'react';\r\n\r\nimport Swal from '../Common/Swal';\r\nimport { useHttpClient } from '../Hooks/HTTPHooks';\r\n\r\nconst DelBtn = (props) => {\r\n  const { sendRequest } = useHttpClient();\r\n\r\n  const state = {\r\n    delOption: {\r\n      title: 'Are you sure?',\r\n      text: '',\r\n      icon: 'warning',\r\n      buttons: {\r\n        cancel: true,\r\n        confirm: {\r\n          text: 'Yes',\r\n          value: true,\r\n          visible: true,\r\n          className: 'bg-danger',\r\n          closeModal: true,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const handleDeleteConfirm = async (isConfirm) => {\r\n    if (isConfirm) {\r\n      try {\r\n        console.log(process.env.REACT_APP_BACKEND_URL + props.delurl);\r\n        await sendRequest(process.env.REACT_APP_BACKEND_URL + props.delurl, 'DELETE');\r\n        props.onDeleteData(props.docid);\r\n      } catch (err) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Swal options={state.delOption} callback={handleDeleteConfirm} title='Delete Task' className='btn btn-sm btn-danger'>\r\n        <i className='fa fa-times'></i>\r\n      </Swal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DelBtn;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ContentWrapper from '../Layout/ContentWrapper';\r\nimport { Container, Card, CardBody } from 'reactstrap';\r\nimport moment from 'moment';\r\n\r\nimport Datatable from '../Common/Datatable';\r\nimport TodoModalForm from '../ToDoModal/ToDoModalForm';\r\nimport DelBtn from '../Common/DelBtn';\r\n\r\n// CSS Loaders\r\nimport 'spinkit/css/spinkit.css';\r\n\r\nconst TodoTable = (props) => {\r\n  const [tableData, setTableData] = useState();\r\n  const [showToDoModal, setShowTodoModal] = useState(false);\r\n  const [docID, setDocID] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const responce = await fetch(process.env.REACT_APP_BACKEND_URL + '/todolist');\r\n        const responceData = await responce.json();\r\n        if (responceData.length < 1) {\r\n          toggleTodoModal('');\r\n        }\r\n        setTableData(responceData);\r\n      } catch (err) {}\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const toggleTodoModal = (p_id) => {\r\n    setDocID(p_id);\r\n    setShowTodoModal((prevState) => !prevState);\r\n  };\r\n\r\n  const addTableData = (data) => {\r\n    const newTableData = tableData.concat(data);\r\n    setTableData(newTableData);\r\n  };\r\n\r\n  const updateTableData = (data) => {\r\n    const elementsIndex = tableData.findIndex((element) => element.id === data.id);\r\n    let newTableData = [...tableData];\r\n    newTableData[elementsIndex] = data;\r\n    setTableData(newTableData);\r\n  };\r\n\r\n  const deleteTableData = (id) => {\r\n    setTableData((prevTableData) => prevTableData.filter((data) => data.id !== id));\r\n  };\r\n\r\n  const dtOptions = {\r\n    pageLength: 10, // Show 10 rows\r\n    paging: true, // Table pagination\r\n    ordering: false, // Column ordering\r\n    info: true, // Bottom left status text\r\n    responsive: false,\r\n    bAutoWidth: false, //for better responsiveness\r\n  };\r\n\r\n  return (\r\n    <ContentWrapper>\r\n      <div className='content-heading'>\r\n        <div className='ml-auto'>\r\n          <button className='btn btn-xs btn-secondary' type='button' onClick={(e) => toggleTodoModal('')}>\r\n            <span className='btn-label'>\r\n              <i className='fas fa-plus-square'></i>\r\n            </span>\r\n            Add Task\r\n          </button>\r\n          <TodoModalForm docID={docID} showTodoModal={showToDoModal} toggleTodoModal={toggleTodoModal} addTableData={addTableData} updateTableData={updateTableData} />\r\n        </div>\r\n      </div>\r\n      <Container fluid>\r\n        <Card>\r\n          <CardBody>\r\n            {tableData === undefined && (\r\n              <div className='card-body d-flex align-items-center justify-content-center'>\r\n                <div className='sk-circle'>\r\n                  <div className='sk-circle1 sk-child'></div>\r\n                  <div className='sk-circle2 sk-child'></div>\r\n                  <div className='sk-circle3 sk-child'></div>\r\n                  <div className='sk-circle4 sk-child'></div>\r\n                  <div className='sk-circle5 sk-child'></div>\r\n                  <div className='sk-circle6 sk-child'></div>\r\n                  <div className='sk-circle7 sk-child'></div>\r\n                  <div className='sk-circle8 sk-child'></div>\r\n                  <div className='sk-circle9 sk-child'></div>\r\n                  <div className='sk-circle10 sk-child'></div>\r\n                  <div className='sk-circle11 sk-child'></div>\r\n                  <div className='sk-circle12 sk-child' s></div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {tableData !== undefined && (\r\n              <div className='table-responsive'>\r\n                <Datatable options={dtOptions}>\r\n                  <table className='table table-striped my-4 w-100'>\r\n                    <thead>\r\n                      <tr>\r\n                        <th data-priority='1'>Status</th>\r\n                        <th>Priority</th>\r\n                        <th>Description</th>\r\n                        <th>Due Date</th>\r\n                        <th></th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {tableData.map((ToDo) => (\r\n                        <tr key={ToDo.id}>\r\n                          <td>{ToDo.status}</td>\r\n                          <td>{ToDo.priority}</td>\r\n                          <td>{ToDo.description}</td>\r\n                          <td>{moment(ToDo.dueAt).format('DD-MMM-YYYY')}</td>\r\n                          <td>\r\n                            <div className='btn-group'>\r\n                              <button className='btn btn-sm btn-primary' type='button' onClick={() => toggleTodoModal(ToDo.id)} alt='Edit Task'>\r\n                                <i className='fa fa-pencil-alt'></i>\r\n                              </button>\r\n                              <DelBtn docid={ToDo.id} delurl={'/todolist?id=' + ToDo.id} onDeleteData={deleteTableData} />\r\n                            </div>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </Datatable>\r\n              </div>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </Container>\r\n    </ContentWrapper>\r\n  );\r\n};\r\n\r\nexport default TodoTable;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ContentWrapper from '../Layout/ContentWrapper';\r\nimport { Container, Card, CardBody } from 'reactstrap';\r\n\r\nimport Datatable from '../Common/Datatable';\r\n\r\n// CSS Loaders\r\nimport 'spinkit/css/spinkit.css';\r\n\r\nconst LatestTable = (props) => {\r\n  const [tableData, setTableData] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const responce = await fetch(process.env.REACT_APP_BACKEND_URL + '/todolist/latest');\r\n        const responceData = await responce.json();\r\n        setTableData(responceData);\r\n      } catch (err) {}\r\n    };\r\n    console.log('ww');\r\n    fetchData();\r\n  }, []);\r\n\r\n  const dtOptions = {\r\n    lengthChange: false,\r\n    searching: false,\r\n    paging: false, // Table pagination\r\n    ordering: false, // Column ordering\r\n    info: false, // Bottom left status text\r\n    responsive: false,\r\n    bAutoWidth: true, //for better responsiveness\r\n  };\r\n\r\n  return (\r\n    <ContentWrapper>\r\n      <Container fluid>\r\n        <Card>\r\n          <CardBody>\r\n            {tableData === undefined && (\r\n              <div className='card-body d-flex align-items-center justify-content-center'>\r\n                <div className='sk-circle'>\r\n                  <div className='sk-circle1 sk-child'></div>\r\n                  <div className='sk-circle2 sk-child'></div>\r\n                  <div className='sk-circle3 sk-child'></div>\r\n                  <div className='sk-circle4 sk-child'></div>\r\n                  <div className='sk-circle5 sk-child'></div>\r\n                  <div className='sk-circle6 sk-child'></div>\r\n                  <div className='sk-circle7 sk-child'></div>\r\n                  <div className='sk-circle8 sk-child'></div>\r\n                  <div className='sk-circle9 sk-child'></div>\r\n                  <div className='sk-circle10 sk-child'></div>\r\n                  <div className='sk-circle11 sk-child'></div>\r\n                  <div className='sk-circle12 sk-child' s></div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {tableData !== undefined && (\r\n              <div className='table-responsive'>\r\n                <Datatable options={dtOptions}>\r\n                  <table className='table table-striped my-4 w-100'>\r\n                    <thead>\r\n                      <tr>\r\n                        <th data-priority='1'>Status</th>\r\n                        <th>Priority</th>\r\n                        <th>Description</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {tableData.map((ToDo) => (\r\n                        <tr key={ToDo.id}>\r\n                          <td>{ToDo.status}</td>\r\n                          <td>{ToDo.priority}</td>\r\n                          <td>{ToDo.description}</td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </Datatable>\r\n              </div>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </Container>\r\n    </ContentWrapper>\r\n  );\r\n};\r\n\r\nexport default LatestTable;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardHeader, CardBody } from 'reactstrap';\r\n\r\nconst ReviewStatistics = (props) => {\r\n  const [statistic, setStatistic] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const responce = await fetch(process.env.REACT_APP_BACKEND_URL + '/todolist/getreviewstatictic');\r\n        const responceData = await responce.json();\r\n        setStatistic(responceData);\r\n      } catch (err) {}\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <Card className='card-default'>\r\n      <CardHeader>Statistics</CardHeader>\r\n      <CardBody>\r\n        <center>\r\n          <h1>\r\n            {statistic.totalCompleted} / {statistic.totalTask}\r\n          </h1>\r\n          <h2>Completed task vs number of task</h2>\r\n        </center>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ReviewStatistics;\r\n","import $ from 'jquery';\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport deepEqual from 'deep-equal';\r\n\r\n// Flot Charts\r\nimport 'flot/jquery.flot.js';\r\nimport 'flot/jquery.flot.categories.js';\r\nimport 'flot/jquery.flot.pie.js';\r\nimport 'flot/jquery.flot.resize.js';\r\nimport 'flot/jquery.flot.time.js';\r\nimport 'jquery.flot.spline/jquery.flot.spline.js';\r\nimport 'jquery.flot.tooltip/js/jquery.flot.tooltip.min.js';\r\n\r\n/**\r\n * Wrapper component for jquery-flot plugin\r\n */\r\nclass FlotChart extends Component {\r\n  static propTypes = {\r\n    /** data to display */\r\n    data: PropTypes.array.isRequired,\r\n    /** flot options object */\r\n    options: PropTypes.object.isRequired,\r\n    /** height of the container element */\r\n    height: PropTypes.string,\r\n    /** width of the container element */\r\n    width: PropTypes.string,\r\n  };\r\n\r\n  static defaultProps = {\r\n    height: '300px',\r\n    width: '100%',\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (typeof $.plot === 'undefined') throw new Error('Flot plugin not present.');\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.dreawChart();\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (!deepEqual(nextProps.data, this.props.data) || !deepEqual(nextProps.options, this.props.options)) {\r\n      this.dreawChart(nextProps);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // $(this.flotElement).data('plot').shutdown();\r\n  }\r\n\r\n  dreawChart(nextProps) {\r\n    const data = (nextProps && nextProps.data) || this.props.data;\r\n    const options = (nextProps && nextProps.options) || this.props.options;\r\n    $.plot(this.flotElement, data, options);\r\n  }\r\n\r\n  setRef = (node) => {\r\n    this.flotElement = node;\r\n  };\r\n\r\n  render() {\r\n    const style = {\r\n      height: this.props.height,\r\n      width: this.props.width,\r\n      color: 'white',\r\n    };\r\n\r\n    return <div ref={this.setRef} style={style} />;\r\n  }\r\n}\r\n\r\nexport default FlotChart;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardHeader, CardBody } from 'reactstrap';\r\n\r\nimport FlotChart from './Flot';\r\n\r\nconst ReviewChart = (props) => {\r\n  const [chartData, setChartData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const responce = await fetch(process.env.REACT_APP_BACKEND_URL + '/todolist/getreviewchart');\r\n        const responceData = await responce.json();\r\n        setChartData(responceData);\r\n      } catch (err) {}\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const chartOption = {\r\n    series: {\r\n      pie: {\r\n        show: true,\r\n        innerRadius: 0,\r\n        label: {\r\n          show: true,\r\n          radius: 0.8,\r\n          formatter: function (label, series) {\r\n            return (\r\n              '<div class=\"flot-pie-label\">' +\r\n              //label + ' : ' +\r\n              Math.round(series.percent) +\r\n              '%</div>'\r\n            );\r\n          },\r\n          background: {\r\n            opacity: 0.8,\r\n            color: '#222',\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Card className='card-default'>\r\n      <CardHeader>Donut Chart</CardHeader>\r\n      <CardBody>\r\n        <FlotChart options={chartOption} data={chartData} className='flot-chart' height='250px' />\r\n        <center>\r\n          <h2>Completed task vs incompleted task</h2>\r\n        </center>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ReviewChart;\r\n","import React, { useState } from 'react';\r\nimport ContentWrapper from '../Layout/ContentWrapper';\r\nimport { Card, TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nimport TodoTable from '../ToDoTable/ToDoTable';\r\nimport LatestTable from '../LastestTable/LastestTable';\r\nimport ReviewStatistics from '../ReviewStatistic/ReviewStatistic';\r\nimport ReviewChart from '../ReviewChart/ReviewChart';\r\n\r\nconst Todo = (props) => {\r\n  const [activeTab, setActiveTab] = useState('all');\r\n\r\n  const toggleTab = (tab) => {\r\n    if (activeTab !== tab) {\r\n      setActiveTab(tab);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ContentWrapper>\r\n      <Card>\r\n        <form className='ie-fix-flex'>\r\n          <div role='tabpanel'>\r\n            <Nav tabs justified>\r\n              <NavItem>\r\n                <NavLink\r\n                  href='#latest'\r\n                  className={activeTab === 'latest' ? 'active' : ''}\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    toggleTab('latest');\r\n                  }}\r\n                >\r\n                  Latest List\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  href='#all'\r\n                  className={activeTab === 'all' ? 'active' : ''}\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    toggleTab('all');\r\n                  }}\r\n                >\r\n                  All List\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  href='#review'\r\n                  className={activeTab === 'review' ? 'active' : ''}\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    toggleTab('review');\r\n                  }}\r\n                >\r\n                  Review\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={activeTab}>\r\n              <TabPane tabId='latest' role='tabpanel'>\r\n                {activeTab === 'latest' && <LatestTable />}\r\n              </TabPane>\r\n              <TabPane tabId='all' role='tabpanel'>\r\n                <TodoTable />\r\n              </TabPane>\r\n              <TabPane tabId='review' role='tabpanel'>\r\n                <ContentWrapper>\r\n                  <Container fluid>\r\n                    <Row>\r\n                      <Col md={6}>{activeTab === 'review' && <ReviewStatistics />}</Col>\r\n                      <Col md={6}>{activeTab === 'review' && <ReviewChart />}</Col>\r\n                    </Row>\r\n                  </Container>\r\n                </ContentWrapper>\r\n              </TabPane>\r\n            </TabContent>\r\n          </div>\r\n        </form>\r\n      </Card>\r\n    </ContentWrapper>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n"],"sourceRoot":""}