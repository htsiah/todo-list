{"version":3,"sources":["components/Hooks/HTTPHooks.js","components/Login/LoginFormValidation.js","components/Login/LoginFormValidationRules.js","components/Login/LoginForm.js"],"names":["useHttpClient","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","LoginFormValidation","initialFormValues","LoginFormValidationRules","React","useState","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","auth","useContext","AuthContext","Object","keys","length","login","username","authentication","handleSubmit","event","preventDefault","handleChange","target","name","value","password","LoginForm","className","style","marginTop","src","alt","onSubmit","type","id","onChange","e","placeholder","data-validate","autoFocus","disabled"],"mappings":"iPAEaA,EAAgB,WAC3B,IAAMC,EAAqBC,iBAAO,IAE5BC,EAAcC,sBAAW,uCAAC,WAAOC,GAAP,qCAAAC,EAAA,6DAAYC,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,KAAMC,EAAzC,+BAAmD,GAC3EC,EAAgB,IAAIC,gBAC1BV,EAAmBW,QAAQC,KAAKH,GAFF,kBAKLI,MAAMT,EAAK,CAChCE,SACAC,OACAC,UACAM,OAAQL,EAAcK,SATI,cAKtBC,EALsB,iBAYDA,EAASC,OAZR,WAYtBC,EAZsB,OAc5BjB,EAAmBW,QAAUX,EAAmBW,QAAQO,QAAO,SAAAC,GAAO,OAAIA,IAAYV,KAEjFM,EAASK,GAhBc,uBAiBpB,IAAIC,MAAMJ,EAAaK,SAjBH,iCAoBrBL,GApBqB,uGAAD,sDAwB5B,IASH,OAPAM,qBAAU,WACR,OAAO,WAELvB,EAAmBW,QAAQa,SAAQ,SAAAC,GAAS,OAAIA,EAAUC,cAE3D,IAEI,CAAExB,iB,kICwBIyB,EAzDa,SAACC,EAAmBC,GAA8B,IAAD,EAC/CC,IAAMC,SAASH,GADgC,mBACpEI,EADoE,KAC5DC,EAD4D,OAE/CH,IAAMC,SAAS,IAFgC,mBAEpEG,EAFoE,KAE5DC,EAF4D,OAGnCL,IAAMC,UAAS,GAHoB,mBAGpEK,EAHoE,KAGtDC,EAHsD,KAKrEC,GADkBvC,cAAhBG,YACKqC,qBAAWC,MAExBjB,qBAAU,WACJa,IAC8C,IAA/BK,OAAOC,KAAKR,GAAQS,OAEf,uCAAG,sBAAAtC,EAAA,sDAcrBiC,EAAKM,MAAMZ,EAAOa,UAdG,2CAAH,oDAqBpBC,GAEAT,GAAgB,MAGnB,CAACD,IAiBJ,MAAO,CAAEW,aARS,uCAAG,WAAOC,GAAP,SAAA3C,EAAA,sDACnB2C,EAAMC,iBACNd,EAAUN,EAAyBG,IACnCK,GAAgB,GAHG,2CAAH,sDAQKa,aAfF,SAACF,GACpBf,EAAU,2BACLD,GADI,IAEP,CAACgB,EAAMG,OAAOC,MAAOJ,EAAMG,OAAOE,UAYDnB,SAAQE,iBCvDhC,SAASP,EAAyBG,GAC/C,IAAIE,EAAS,GAUb,OARKF,EAAOa,WACVX,EAAOW,SAAW,sBAGfb,EAAOsB,WACVpB,EAAOoB,SAAW,sBAGbpB,ECmDMqB,UA5DG,WAEhB,IAFsB,EAOuC5B,EAL/B,CAC5BkB,SAAU,GACVS,SAAU,IAG4FzB,GAAhGkB,EAPc,EAOdA,aAAcG,EAPA,EAOAA,aAAchB,EAPd,EAOcA,OAAQE,EAPtB,EAOsBA,aAE5C,OACE,6BACE,yBAAKoB,UAAU,YAAYC,MAAO,CAAEC,UAAW,SAC7C,yBAAKF,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,wBAAwBG,IAAI,cAAcC,IAAI,UAE/D,yBAAKJ,UAAU,4BACb,yBAAKA,UAAU,kBACb,yBAAKC,MAAO,CAAEC,UAAW,SAAzB,KACA,yBAAKF,UAAU,2BACb,uBAAGA,UAAU,oBAAb,0BAEF,yBAAKA,UAAU,aACb,uBAAGA,UAAU,oBAAb,yBACA,0BAAMA,UAAU,OAAOJ,KAAK,YAAYS,SAAUd,GAChD,yBAAKS,UAAU,cACb,yBAAKA,UAAU,0BACb,kBAAC,IAAD,CAAOM,KAAK,WAAWC,GAAG,WAAWX,KAAK,WAAWY,SAAU,SAACC,GAAD,OAAOf,EAAae,IAAIT,UAAWtB,EAAOW,SAAW,0BAA4B,iBAAkBqB,YAAY,WAAWC,gBAAc,eAAeC,WAAS,IAC/N,yBAAKZ,UAAU,sBACb,0BAAMA,UAAU,4DACd,wBAAIA,UAAU,kBAInBtB,EAAOW,UAAY,uBAAGW,UAAU,eAAetB,EAAOW,WAEzD,yBAAKW,UAAU,cACb,yBAAKA,UAAU,0BACb,kBAAC,IAAD,CAAOM,KAAK,WAAWC,GAAG,WAAWX,KAAK,WAAWY,SAAU,SAACC,GAAD,OAAOf,EAAae,IAAIT,UAAWtB,EAAOoB,SAAW,0BAA4B,iBAAkBY,YAAY,WAAWC,gBAAc,iBACvM,yBAAKX,UAAU,sBACb,0BAAMA,UAAU,4DACd,wBAAIA,UAAU,kBAInBtB,EAAOoB,UAAY,uBAAGE,UAAU,eAAetB,EAAOoB,WAEzD,4BAAQE,UAAU,iCAAiCa,SAAUjC,EAAc0B,KAAK,UAAhF","file":"static/js/10.cdd73294.chunk.js","sourcesContent":["import { useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n    const httpAbortCtrl = new AbortController();\r\n    activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method,\r\n        body,\r\n        headers,\r\n        signal: httpAbortCtrl.signal\r\n      });\r\n\r\n      const responseData = await response.json();\r\n\r\n      activeHttpRequests.current = activeHttpRequests.current.filter(reqCtrl => reqCtrl !== httpAbortCtrl);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(responseData.message);\r\n      }\r\n\r\n      return responseData;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { sendRequest };\r\n};\r\n","import React, { useEffect, useContext } from 'react';\r\n\r\nimport { AuthContext } from '../Contexts/AuthContext';\r\nimport { useHttpClient } from '../Hooks/HTTPHooks';\r\n\r\nconst LoginFormValidation = (initialFormValues, LoginFormValidationRules) => {\r\n  const [values, setValues] = React.useState(initialFormValues);\r\n  const [errors, setErrors] = React.useState({});\r\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\r\n  const { sendRequest } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    if (isSubmitting) {\r\n      const noErrors = Object.keys(errors).length === 0;\r\n      if (noErrors) {\r\n        const authentication = async () => {\r\n          // try {\r\n          //   const responseData = await sendRequest(\r\n          //     process.env.REACT_APP_BACKEND_URL + '/system/authentication',\r\n          //     'POST',\r\n          //     JSON.stringify({\r\n          //       username: values.username,\r\n          //       password: values.password,\r\n          //     }),\r\n          //     {\r\n          //       'Content-Type': 'application/json',\r\n          //     }\r\n          //   );\r\n          //   if (responseData.status) {\r\n          auth.login(values.username);\r\n          //   } else {\r\n          //     setErrors({ password: 'Invalid username or wrong password.' });\r\n          //   }\r\n          //   setIsSubmitting(false);\r\n          // } catch (err) {}\r\n        };\r\n        authentication();\r\n      } else {\r\n        setIsSubmitting(false);\r\n      }\r\n    }\r\n  }, [isSubmitting]); // eslint-disable-line\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value, // use the bracket surrounding the event.target.name to dynamically change the property.\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setErrors(LoginFormValidationRules(values));\r\n    setIsSubmitting(true);\r\n    // Move to call useEffect\r\n    // If there is error, no submit.\r\n  };\r\n\r\n  return { handleSubmit, handleChange, errors, isSubmitting };\r\n};\r\n\r\nexport default LoginFormValidation;\r\n","/**\r\n * This is where you configure the validation rules\r\n */\r\n\r\nexport default function LoginFormValidationRules(values) {\r\n  let errors = {};\r\n\r\n  if (!values.username) {\r\n    errors.username = 'Field is required.';\r\n  }\r\n\r\n  if (!values.password) {\r\n    errors.password = 'Field is required.';\r\n  }\r\n\r\n  return errors;\r\n}\r\n","import React from 'react';\r\nimport { Input } from 'reactstrap';\r\n\r\nimport LoginFormValidation from './LoginFormValidation';\r\nimport LoginFormValidationRules from './LoginFormValidationRules';\r\n\r\nconst LoginForm = () => {\r\n  // Initial Fields Value\r\n  const INITIAL_FIELDS_VALUES = {\r\n    username: '',\r\n    password: '',\r\n  };\r\n\r\n  const { handleSubmit, handleChange, errors, isSubmitting } = LoginFormValidation(INITIAL_FIELDS_VALUES, LoginFormValidationRules);\r\n\r\n  return (\r\n    <div>\r\n      <div className='container' style={{ marginTop: '50px' }}>\r\n        <div className='row'>\r\n          <div className='col-sm'>\r\n            <img className='img-fluid ie-fix-flex' src='img/bg7.jpg' alt='Demo'></img>\r\n          </div>\r\n          <div className='col-sm align-self-center'>\r\n            <div className='card card-flat'>\r\n              <div style={{ marginTop: '15px' }}> </div>\r\n              <div className='card-header text-center'>\r\n                <p className='text-center py-2'>Welcome To Do Web App</p>\r\n              </div>\r\n              <div className='card-body'>\r\n                <p className='text-center py-2'> SIGN IN TO CONTINUE.</p>\r\n                <form className='mb-3' name='formLogin' onSubmit={handleSubmit}>\r\n                  <div className='form-group'>\r\n                    <div className='input-group with-focus'>\r\n                      <Input type='username' id='username' name='username' onChange={(e) => handleChange(e)} className={errors.username ? 'form-control is-invalid' : 'border-right-0'} placeholder='Username' data-validate='[\"required\"]' autoFocus />\r\n                      <div className='input-group-append'>\r\n                        <span className='input-group-text text-muted bg-transparent border-left-0'>\r\n                          <em className='fa fa-user'></em>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    {errors.username && <p className='text-danger'>{errors.username}</p>}\r\n                  </div>\r\n                  <div className='form-group'>\r\n                    <div className='input-group with-focus'>\r\n                      <Input type='password' id='password' name='password' onChange={(e) => handleChange(e)} className={errors.password ? 'form-control is-invalid' : 'border-right-0'} placeholder='Password' data-validate='[\"required\"]' />\r\n                      <div className='input-group-append'>\r\n                        <span className='input-group-text text-muted bg-transparent border-left-0'>\r\n                          <em className='fa fa-lock'></em>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    {errors.password && <p className='text-danger'>{errors.password}</p>}\r\n                  </div>\r\n                  <button className='btn btn-block btn-primary mt-3' disabled={isSubmitting} type='submit'>\r\n                    Login\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"sourceRoot":""}