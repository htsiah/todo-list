{"version":3,"sources":["components/Hooks/HTTPHooks.js","components/Layout/ContentWrapper.js","components/Common/Datatable.js","components/Common/Swal.js","components/Common/DelBtn.js","components/Appointment/AppointmentTableRow.js","components/Appointment/AppointmentTable.js","components/Appointment/Appointment.js"],"names":["useHttpClient","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","ContentWrapper","props","className","unwrap","children","defaultProps","window","JSZip","require","Datatable","setRef","node","tableElement","dtInstance","$","this","dataTable","options","destroy","React","cloneElement","Children","only","ref","Component","Swal","callback","rest","onClick","e","preventDefault","swal","then","p","propType","PropTypes","object","isRequired","func","DelBtn","handleDeleteConfirm","isConfirm","console","log","process","delurl","onDeleteData","docid","title","text","icon","buttons","cancel","confirm","value","visible","closeModal","AppointmentTableRow","data","map","Appointment","nm","em","mobno","carbd","moment","dat","format","tm","id","withNamespaces","useState","tableData","setTableData","responce","responceData","fetchAppointment","fluid","undefined","pageLength","paging","ordering","info","responsive","bAutoWidth","columnDefs","targets","orderable","dom","extend","exportOptions","columns","data-priority","i18nKey","prevTableData","dropdownOpen","setDropdownOpen","changeLanguage","lng","i18n","isOpen","toggle"],"mappings":"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","file":"static/js/8.f16a3dfd.chunk.js","sourcesContent":["import { useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n    const httpAbortCtrl = new AbortController();\r\n    activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method,\r\n        body,\r\n        headers,\r\n        signal: httpAbortCtrl.signal\r\n      });\r\n\r\n      const responseData = await response.json();\r\n\r\n      activeHttpRequests.current = activeHttpRequests.current.filter(reqCtrl => reqCtrl !== httpAbortCtrl);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(responseData.message);\r\n      }\r\n\r\n      return responseData;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { sendRequest };\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Wrapper element for template content\r\n */\r\nconst ContentWrapper = props =>(\r\n    <div className=\"content-wrapper\">\r\n        {props.unwrap ?\r\n            (<div className=\"unwrap\">{props.children}</div>)\r\n            :\r\n            (props.children)\r\n        }\r\n    </div>\r\n)\r\n\r\nContentWrapper.propTypes = {\r\n    /** add element with 'unwrap' class to expand content area */\r\n    unwrap: PropTypes.bool\r\n}\r\nContentWrapper.defaultProps = {\r\n    unwrap: false\r\n}\r\n\r\nexport default ContentWrapper;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport $ from 'jquery';\r\n\r\n// Libraries for buttons\r\nimport * as JSZip from 'jszip';\r\nwindow.JSZip = JSZip;\r\nrequire('pdfmake/build/pdfmake.js');\r\nrequire('pdfmake/build/vfs_fonts.js');\r\n// Datatables\r\nrequire('datatables.net-bs');\r\nrequire('datatables.net-bs4/js/dataTables.bootstrap4.js');\r\nrequire('datatables.net-bs4/css/dataTables.bootstrap4.css');\r\nrequire('datatables.net-buttons');\r\nrequire('datatables.net-buttons-bs');\r\nrequire('datatables.net-responsive');\r\nrequire('datatables.net-responsive-bs');\r\nrequire('datatables.net-responsive-bs/css/responsive.bootstrap.css');\r\nrequire('datatables.net-buttons/js/buttons.colVis.js'); // Column visibility\r\nrequire('datatables.net-buttons/js/buttons.html5.js'); // HTML 5 file export\r\nrequire('datatables.net-buttons/js/buttons.flash.js'); // Flash file export\r\nrequire('datatables.net-buttons/js/buttons.print.js'); // Print view button\r\nrequire('datatables.net-keytable');\r\nrequire('datatables.net-keytable-bs/css/keyTable.bootstrap.css');\r\n\r\n/**\r\n * Wrapper component for dataTable plugin\r\n * Only DOM child elements, componets are not supported (e.g. <Table>)\r\n */\r\nexport default class Datatable extends Component {\r\n  static propTypes = {\r\n    /** datatables options object */\r\n    options: PropTypes.object,\r\n    /** only one children allowed */\r\n    children: PropTypes.element.isRequired,\r\n    /** callback that receives the datatable instance as param */\r\n    dtInstance: PropTypes.func,\r\n  };\r\n\r\n  static defaultProps = {\r\n    options: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    const dtInstance = $(this.tableElement).dataTable(this.props.options);\r\n\r\n    if (this.props.dtInstance) this.props.dtInstance(dtInstance);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    $(this.tableElement).dataTable({ destroy: true });\r\n  }\r\n\r\n  setRef = (node) => (this.tableElement = node);\r\n\r\n  render() {\r\n    return React.cloneElement(React.Children.only(this.props.children), {\r\n      ref: this.setRef,\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// Sweet Alert\r\nimport swal from 'sweetalert';\r\n\r\n/**\r\n * Wrapper component for sweetalert plugin\r\n */\r\nconst Swal = props => {\r\n  const handleClick = e => {\r\n    e.preventDefault();\r\n    // pass swal reference so is possible to chain popups\r\n    swal(props.options).then(p => props.callback(p, swal));\r\n  };\r\n\r\n  const { callback, ...rest } = props;\r\n  return (\r\n    <div {...rest} onClick={handleClick}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nSwal.propType = {\r\n  /** swal options object */\r\n  options: PropTypes.object.isRequired,\r\n  /** callback function for swal response */\r\n  callback: PropTypes.func\r\n};\r\n\r\nSwal.defaultProps = {\r\n  callback: () => {}\r\n};\r\n\r\nexport default Swal;\r\n","import React from 'react';\r\n\r\nimport Swal from '../Common/Swal';\r\nimport { useHttpClient } from '../Hooks/HTTPHooks';\r\n\r\nconst DelBtn = (props) => {\r\n  const { sendRequest } = useHttpClient();\r\n\r\n  const state = {\r\n    delOption: {\r\n      title: 'Are you sure?',\r\n      text: '',\r\n      icon: 'warning',\r\n      buttons: {\r\n        cancel: true,\r\n        confirm: {\r\n          text: 'Yes',\r\n          value: true,\r\n          visible: true,\r\n          className: 'bg-danger',\r\n          closeModal: true,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const handleDeleteConfirm = async (isConfirm) => {\r\n    if (isConfirm) {\r\n      try {\r\n        console.log(process.env.REACT_APP_BACKEND_URL + props.delurl);\r\n        await sendRequest(process.env.REACT_APP_BACKEND_URL + props.delurl, 'DELETE');\r\n        props.onDeleteData(props.docid);\r\n      } catch (err) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Swal options={state.delOption} callback={handleDeleteConfirm} title='Delete Task' className='btn btn-sm btn-danger'>\r\n        <i className='fa fa-times'></i>\r\n      </Swal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DelBtn;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nimport DelBtn from '../Common/DelBtn';\r\n\r\nconst AppointmentTableRow = (props) => {\r\n  return (\r\n    <>\r\n      {props.data.map((Appointment) => (\r\n        <tr>\r\n          <td>{Appointment.nm}</td>\r\n          <td>{Appointment.em}</td>\r\n          <td>{Appointment.mobno}</td>\r\n          <td>{Appointment.carbd}</td>\r\n          <td>{moment(Appointment.dat).format('DD-MMM-YYYY')}</td>\r\n          <td>{Appointment.tm}</td>\r\n          <td>\r\n            <DelBtn docid={Appointment.id} delurl={'/appointment/' + Appointment.id} onDeleteData={props.onDeleteData} />\r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppointmentTableRow;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withNamespaces, Trans } from 'react-i18next';\r\nimport { Container, Card, CardBody } from 'reactstrap';\r\nimport Datatable from '../Common/Datatable';\r\n\r\nimport AppointmentTableRow from './AppointmentTableRow';\r\n\r\nconst AppointmentTable = (props) => {\r\n  const [tableData, setTableData] = useState([{}]);\r\n\r\n  useEffect(() => {\r\n    const fetchAppointment = async () => {\r\n      try {\r\n        const responce = await fetch(process.env.REACT_APP_BACKEND_URL + '/appointment');\r\n        const responceData = await responce.json();\r\n        setTableData(responceData);\r\n      } catch (err) {}\r\n    };\r\n\r\n    fetchAppointment();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleDeleteData = (id) => {\r\n    setTableData((prevTableData) => prevTableData.filter((data) => data.id !== id));\r\n  };\r\n\r\n  const state = {\r\n    dtOptions: {\r\n      pageLength: 50, // Show 50 rows\r\n      paging: true, // Table pagination\r\n      ordering: true, // Column ordering\r\n      info: true, // Bottom left status text\r\n      responsive: false,\r\n      bAutoWidth: false, //for better responsiveness\r\n      columnDefs: [\r\n        {\r\n          targets: [6],\r\n          className: 'text-center',\r\n          orderable: false,\r\n        },\r\n      ],\r\n      // Datatable Buttons setup\r\n      dom: 'Bfrtip',\r\n      buttons: [\r\n        { extend: 'copy', className: 'btn-info' },\r\n        {\r\n          extend: 'csv',\r\n          className: 'btn-info',\r\n          title: 'Appointment',\r\n          exportOptions: {\r\n            columns: ':visible',\r\n          },\r\n        },\r\n        {\r\n          extend: 'excel',\r\n          className: 'btn-info',\r\n          title: 'Appointment',\r\n          exportOptions: {\r\n            columns: ':visible',\r\n          },\r\n        },\r\n        {\r\n          extend: 'print',\r\n          className: 'btn-info',\r\n          exportOptions: {\r\n            columns: ':visible',\r\n          },\r\n        },\r\n        {\r\n          extend: 'colvis',\r\n          className: 'btn-info',\r\n          text: 'Hide / Show',\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Container fluid>\r\n      {tableData !== undefined && (\r\n        <Card>\r\n          <CardBody>\r\n            <div className=\"table-responsive\">\r\n              <Datatable options={state.dtOptions}>\r\n                <table id=\"table\" className=\"table table-striped my-4 w-100\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th data-priority=\"1\">\r\n                        <Trans i18nKey=\"form.NAME\"></Trans>\r\n                      </th>\r\n                      <th>\r\n                        <Trans i18nKey=\"form.EMAIL\"></Trans>\r\n                      </th>\r\n                      <th>\r\n                        <Trans i18nKey=\"form.MOBILE\"></Trans>\r\n                      </th>\r\n                      <th>\r\n                        <Trans i18nKey=\"form.CARBRAND\"></Trans>\r\n                      </th>\r\n                      <th>\r\n                        <Trans i18nKey=\"form.DATE\"></Trans>\r\n                      </th>\r\n                      <th>\r\n                        <Trans i18nKey=\"form.TIME\"></Trans>\r\n                      </th>\r\n                      <th></th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <AppointmentTableRow data={tableData} onDeleteData={handleDeleteData} />\r\n                  </tbody>\r\n                </table>\r\n              </Datatable>\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withNamespaces('translations')(AppointmentTable);\r\n","import React, { useState } from 'react';\r\nimport { withNamespaces, Trans } from 'react-i18next';\r\nimport ContentWrapper from '../Layout/ContentWrapper';\r\nimport { Row, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\n\r\nimport AppointmentTable from './AppointmentTable';\r\n\r\nconst Appointment = (props) => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const changeLanguage = (lng) => {\r\n    props.i18n.changeLanguage(lng);\r\n  };\r\n\r\n  const toggle = () => {\r\n    setDropdownOpen(!dropdownOpen);\r\n  };\r\n\r\n  return (\r\n    <ContentWrapper>\r\n      <div className=\"content-heading\">\r\n        <div>\r\n          <Trans i18nKey=\"myappointment.TITLE\"></Trans>\r\n        </div>\r\n        {/* START Language list */}\r\n        <div className=\"ml-auto\">\r\n          <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n            <DropdownToggle>English</DropdownToggle>\r\n            <DropdownMenu className=\"dropdown-menu-right-forced animated fadeInUpShort\">\r\n              <DropdownItem onClick={() => changeLanguage('en')}>English</DropdownItem>\r\n              <DropdownItem onClick={() => changeLanguage('ch')}>Chinese</DropdownItem>\r\n            </DropdownMenu>\r\n          </Dropdown>\r\n        </div>\r\n        {/* END Language list */}\r\n      </div>\r\n      <Row>\r\n        <AppointmentTable />\r\n      </Row>\r\n    </ContentWrapper>\r\n  );\r\n};\r\n\r\nexport default withNamespaces('translations')(Appointment);\r\n"],"sourceRoot":""}